//121. Best Time to Buy and Sell Stock
#include <iostream>
#include <vector>
#include <algorithm> // For std::max
using namespace std;

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int buy = prices[0];
        int maxProfit = 0;
        for (int i = 0; i < prices.size(); i++) {
            if (maxProfit < (prices[i] - buy)) {
                maxProfit = prices[i] - buy;
            }
            if (prices[i] < buy) {
                buy = prices[i];
            }
        }
        return maxProfit;
    }
};

int main() {
    Solution sol;

    // Test case 1
    vector<int> prices1 = {7, 1, 5, 3, 6, 4};
    cout << "Maximum profit for prices1: " << sol.maxProfit(prices1) << endl;

    // Test case 2
    vector<int> prices2 = {7, 6, 4, 3, 1};
    cout << "Maximum profit for prices2: " << sol.maxProfit(prices2) << endl;

    return 0;
}
