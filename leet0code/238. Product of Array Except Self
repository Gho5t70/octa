#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int> ans;
        int count = 0;
        int answer = 1;

        // Calculate the product of all non-zero elements and count zeros
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] == 0) {
                count++;
            } else {
                answer = answer * nums[i];
            }
        }

        // Generate the result based on the number of zeros
        for (int j = 0; j < nums.size(); j++) {
            if (nums[j] == 0) {
                count--;
                if (count > 0) {
                    ans.push_back(0);
                } else {
                    ans.push_back(answer);
                }
                count++;
            } else {
                if (count > 0) {
                    ans.push_back(0);
                } else {
                    ans.push_back(answer / nums[j]);
                }
            }
        }

        return ans;
    }
};

int main() {
    Solution sol;

    // Test case 1
    vector<int> nums1 = {1, 2, 3, 4};
    vector<int> result1 = sol.productExceptSelf(nums1);
    cout << "Product except self for nums1: ";
    for (int num : result1) {
        cout << num << " ";
    }
    cout << endl;

    // Test case 2
    vector<int> nums2 = {0, 1, 2, 3};
    vector<int> result2 = sol.productExceptSelf(nums2);
    cout << "Product except self for nums2: ";
    for (int num : result2) {
        cout << num << " ";
    }
    cout << endl;

    // Test case 3
    vector<int> nums3 = {0, 0, 1, 2};
    vector<int> result3 = sol.productExceptSelf(nums3);
    cout << "Product except self for nums3: ";
    for (int num : result3) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
